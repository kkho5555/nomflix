{"version":3,"sources":["asset/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","prototype","PropTypes","string","isRequired","oneOfType","arrayOf","node","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","movieAPI","get","append_to_response","term","query","encodeURIComponent","tvAPI","HomeContatiner","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","showResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","console","log","Backdrop","bgImage","Content","Cover","Data","ItemContainer","h3","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedID","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyle","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a5e8977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  list-style: none;\r\n`;\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${props => (props.current ? '#3498db' : 'transparent')};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === '/'}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === '/tv'}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === '/search'}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 80px;\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏳\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nconst Text = styled.span`\r\n  font-size: 36px;\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s ease-in-out;\r\n`;\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.3s ease-in-out;\r\n`;\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\nconst Title = styled.span`\r\n  display: block;\r\n\r\n  margin-bottom: 3px;\r\n`;\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require('../asset/noPosterSmall.png')\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{' '}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 20 ? `${title.substring(0, 20)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from '../../Components/Poster';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing Movies\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n});\r\n\r\napi.interceptors.request.use(config => {\r\n  config.params = config.params || {};\r\n  config.params['api_key'] = '563446817a04da527b7bf1f0171a5d0a';\r\n  config.params['language'] = 'en-US';\r\n  return config;\r\n});\r\n\r\nexport const movieAPI = {\r\n  nowPlaying: () => api.get('movie/now_playing'),\r\n  upcoming: () => api.get('movie/upcoming'),\r\n  popular: () => api.get('movie/popular'),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: 'videos',\r\n      },\r\n    }),\r\n  search: term =>\r\n    api.get('search/movie', { params: { query: encodeURIComponent(term) } }),\r\n};\r\n\r\nexport const tvAPI = {\r\n  topRated: () => api.get('tv/top_rated'),\r\n  popular: () => api.get('tv/popular'),\r\n  airingToday: () => api.get('tv/airing_today'),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: 'videos',\r\n      },\r\n    }),\r\n  search: term =>\r\n    api.get('search/tv', { params: { query: encodeURIComponent(term) } }),\r\n};\r\n","import HomeContatiner from './HomeContainer';\r\n\r\nexport default HomeContatiner;\r\n","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { movieAPI } from 'api';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await movieAPI.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await movieAPI.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await movieAPI.popular();\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find Movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated TV Shows\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular TV Shows\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today TV Shows\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;\r\n","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvAPI } from 'api';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvAPI.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvAPI.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvAPI.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Loader from 'Components/Loader';\r\nimport Poster from 'Components/Poster';\r\nimport { Helmet } from 'react-helmet';\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  showResults,\r\n  searchTerm,\r\n  handleSubmit,\r\n  loading,\r\n  error,\r\n  updateTerm,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    {\r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Input\r\n            placeholder=\"Search Movies or TV shows...\"\r\n            value={searchTerm}\r\n            onChange={updateTerm}\r\n          />\r\n        </Form>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            {movieResults && movieResults.length > 0 && (\r\n              <Section title=\"Movie Results\">\r\n                {movieResults.map(movie => (\r\n                  <Poster\r\n                    key={movie.id}\r\n                    id={movie.id}\r\n                    imageUrl={movie.poster_path}\r\n                    title={movie.original_title}\r\n                    rating={movie.vote_average}\r\n                    year={\r\n                      movie.release_date && movie.release_date.substring(0, 4)\r\n                    }\r\n                    isMovie={true}\r\n                  />\r\n                ))}\r\n              </Section>\r\n            )}\r\n            {showResults && showResults.length > 0 && (\r\n              <Section title=\"TV Show Results\">\r\n                {showResults.map(show => (\r\n                  <Poster\r\n                    key={show.id}\r\n                    id={show.id}\r\n                    imageUrl={show.poster_path}\r\n                    title={show.original_name}\r\n                    rating={show.vote_average}\r\n                    year={\r\n                      show.first_air_date && show.first_air_date.substring(0, 4)\r\n                    }\r\n                  />\r\n                ))}\r\n              </Section>\r\n            )}\r\n          </>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {showResults &&\r\n          movieResults &&\r\n          showResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </Container>\r\n    }\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  showResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { movieAPI, tvAPI } from 'api';\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    showResults: null,\r\n    searchTerm: '',\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== '') {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n  searchByTerm = async () => {\r\n    try {\r\n      const { searchTerm } = this.state;\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await movieAPI.search(searchTerm);\r\n      const {\r\n        data: { results: showResults },\r\n      } = await tvAPI.search(searchTerm);\r\n      this.setState({ movieResults, showResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n  render() {\r\n    const {\r\n      movieResults,\r\n      showResults,\r\n      searchTerm,\r\n      loading,\r\n      error,\r\n    } = this.state;\r\n    console.log(this.state);\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        showResults={showResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Section from 'Components/Section';\r\nimport Loader from 'Components/Loader';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1;\r\n  position: relative;\r\n`;\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0%;\r\n`;\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\nconst Item = styled.span``;\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require('../../asset/noPosterSmall.png')\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { movieAPI, tvAPI } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: null,\r\n      isMovie: pathname.includes('/movie/'),\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const parsedID = parseInt(id);\r\n    if (isNaN(parsedID)) {\r\n      return push('/');\r\n    }\r\n    const { isMovie } = this.state;\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await movieAPI.movieDetail(parsedID));\r\n      } else {\r\n        ({ data: result } = await tvAPI.showDetail(parsedID));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return <DetailPresenter result={result} loading={loading} error={error} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport Header from 'Components/Header';\r\nimport Home from 'Routes/Home';\r\nimport TV from 'Routes/TV';\r\nimport Search from 'Routes/Search';\r\nimport Detail from 'Routes/Detail';\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\nconst globalStyle = createGlobalStyle`\r\n  ${reset};\r\n  a {\r\n      text-decoration:none;\r\n      color: inherit;\r\n  }\r\n  *{\r\n      box-sizing:border-box;\r\n  }\r\n  body{\r\n      font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n      font-size:12px;\r\n      background-color : rgba(20,20,20,1);\r\n      color: white;\r\n      padding-top:50px;\r\n  }\r\n`;\r\n\r\nexport default globalStyle;\r\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport './api';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}